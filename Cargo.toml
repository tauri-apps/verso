[workspace]
members = ["verso", "versoview_messages", "versoview_build"]

[workspace.package]
version = "0.0.3"
edition = "2024"
license = "Apache-2.0 OR MIT"
homepage = "https://versotile.org/verso"
repository = "https://github.com/versotile-org/verso"

[workspace.dependencies]
serde = { version = "1.0", features = ["derive"] }
ipc-channel = "0.19"
bincode = "1"
url = { version = "2.5.2", features = ["serde"] }
log = "0.4"
headers = "0.4"
http = "1"
uuid = { version = "1", features = ["v4", "serde"] }
dpi = { version = "0.1", features = ["serde"] }

[package]
name = "versoview"
version.workspace = true
edition.workspace = true
authors = ["Wu Yu Wei"]
license.workspace = true
description = "An innovative web browser"
readme = "README.md"
homepage.workspace = true
repository.workspace = true
documentation = "https://docs.versotile.org/verso"
categories = ["web-programming"]

[package.metadata.packager]
name = "verso"
product-name = "verso"
identifier = "org.versotile.verso"
version = "0.0.1"
before-each-package-command = "python etc/package_libs.py"
resources = [
  "resources",
  "icons",
  "target/release/build/**/libEGL.dll",
  "target/release/build/**/libGLESv2.dll",
  "target/release/lib",
]
icons = ["icons/icon256x256.png", "icons/icon.ico"]

[package.metadata.packager.nsis]
appdata-paths = ["$LOCALAPPDATA/$IDENTIFIER"]

[package.metadata.docs.rs]
targets = [
  "x86_64-unknown-linux-gnu",
  "x86_64-pc-windows-msvc",
  "x86_64-apple-darwin",
]

[features]
bluetooth = [
    "bluetooth_traits",
    "dep:bluetooth",
    "constellation/bluetooth",
    "constellation_traits/bluetooth",
    "script/bluetooth",
    "script_traits/bluetooth",
]
background_hang_monitor = ["background_hang_monitor/sampler"]
default = ["bluetooth", "background_hang_monitor"]
packager = ["dep:cargo-packager-resource-resolver"]
flatpak = []
tracing = []
embed-useragent-stylesheets = []

[build-dependencies]
cfg_aliases = "0.2"

[dependencies]
arboard = "3.4.0"
crossbeam-channel = "0.5"
env_logger = "0.11"
euclid = "0.22"
getopts = "0.2.17"
gleam = "0.15"
glutin = "0.32.0"
glutin-winit = "0.5.0"
ipc-channel = { workspace = true }
keyboard-types = "0.7"
log = { workspace = true }
raw-window-handle = { version = "0.6", features = ["std"] }
rustls = { version = "0.23", default-features = false, features = ["aws-lc-rs"] }
sparkle = "0.1.26"
thiserror = "1.0"
winit = { version = "0.30", features = ["rwh_06"] }
dpi = { workspace = true }
url = { workspace = true }
headers = { workspace = true }
http = { workspace = true }
versoview_messages = { path = "./versoview_messages" }
serde = { workspace = true }
serde_json = "1.0"
bincode = { workspace = true }
mime = "0.3"
uuid = { workspace = true }
rfd = "0.15"
bitflags = "2.9"
# Servo repo crates
background_hang_monitor = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
base = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
bluetooth = { git = "https://github.com/servo/servo.git", rev = "894fbd0", optional = true }
bluetooth_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0", optional = true }
canvas = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
compositing_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
constellation = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
constellation_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
devtools = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
embedder_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
fonts = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
layout = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
media = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
net = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
net_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
profile = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
profile_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
script = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
script_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
servo_allocator = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
servo_config = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
servo_geometry = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
servo_url = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
webdriver_server = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
webgpu = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
webgpu_traits = { git = "https://github.com/servo/servo.git", rev = "894fbd0" }
# Servo org crates
servo-media = { git = "https://github.com/servo/media" }
servo-media-dummy = { git = "https://github.com/servo/media" }
stylo = { git = "https://github.com/servo/stylo", branch = "2025-03-15" }
stylo_traits = { git = "https://github.com/servo/stylo", branch = "2025-03-15" }
webrender = { git = "https://github.com/servo/webrender", branch = "0.66", features = ["capture"] }
webrender_api = { git = "https://github.com/servo/webrender", branch = "0.66" }
wr_malloc_size_of = { git = "https://github.com/servo/webrender", branch = "0.66" }
# Packager feature
cargo-packager-resource-resolver = { version = "0.1.1", features = [
  "auto-detect-format",
], optional = true }

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies]
notify-rust = { version = "4.11.5", features = ["images"] }

[target.'cfg(any(target_os = "macos", target_os = "windows"))'.dependencies]
notify-rust = "4.11.5"
muda = "0.15"

[target.'cfg(any(target_os = "ios", target_os = "macos"))'.dependencies]
objc2 = "0.5"
objc2-foundation = { version = "0.2.2", features = ["NSThread"] }
objc2-app-kit = { version = "0.2", features = [
  "NSView",
  "NSResponder",
  "NSWindow",
] }

[[test]]
name = "general"
harness = false

[profile.release-lto]
inherits = "release"
lto = true

# Tell clippy to allow e.g. #[cfg(macos)]
[lints.rust]
unexpected_cfgs = "allow"
